diff --git a/modules/juce_gui_basics/filebrowser/juce_FileBrowserComponent.h b/modules/juce_gui_basics/filebrowser/juce_FileBrowserComponent.h
index dc4409a75..3a263dba6 100644
--- a/modules/juce_gui_basics/filebrowser/juce_FileBrowserComponent.h
+++ b/modules/juce_gui_basics/filebrowser/juce_FileBrowserComponent.h
@@ -63,7 +63,8 @@ public:
         useTreeView                     = 32,   /**< specifies that a tree-view should be shown instead of a file list. */
         filenameBoxIsReadOnly           = 64,   /**< specifies that the user can't type directly into the filename box. */
         warnAboutOverwriting            = 128,  /**< specifies that the dialog should warn about overwriting existing files (if possible). */
-        doNotClearFileNameOnRootChange  = 256   /**< specifies that the file name should not be cleared upon root change. */
+        doNotClearFileNameOnRootChange  = 256,  /**< specifies that the file name should not be cleared upon root change. */
+        showsHiddenFiles                = 512,
     };
 
     //==============================================================================
diff --git a/modules/juce_gui_basics/native/juce_FileChooser_mac.mm b/modules/juce_gui_basics/native/juce_FileChooser_mac.mm
index 5dc5c941f..5a8a320ec 100644
--- a/modules/juce_gui_basics/native/juce_FileChooser_mac.mm
+++ b/modules/juce_gui_basics/native/juce_FileChooser_mac.mm
@@ -98,6 +98,8 @@ public:
         [panel setAllowedFileTypes: createAllowedTypesArray (filters)];
         JUCE_END_IGNORE_WARNINGS_GCC_LIKE
 
+        panel.showsHiddenFiles = ((flags & FileBrowserComponent::showsHiddenFiles) != 0);
+
         if (! isSave)
         {
             auto* openPanel = static_cast<NSOpenPanel*> (panel);
diff --git a/modules/juce_opengl/juce_opengl.cpp b/modules/juce_opengl/juce_opengl.cpp
index db2003617..abe30e284 100644
--- a/modules/juce_opengl/juce_opengl.cpp
+++ b/modules/juce_opengl/juce_opengl.cpp
@@ -197,9 +197,11 @@ static void checkGLError (const char* file, const int line)
         if (e == GL_NO_ERROR)
             break;
 
+#if 0 // Avoid runtime assertion by Main Thread Checker
         // if the peer is not valid then ignore errors
         if (! checkPeerIsValid (OpenGLContext::getCurrentContext()))
             continue;
+#endif
 
         DBG ("***** " << getGLErrorMessage (e) << "  at " << file << " : " << line);
         jassertfalse;
@@ -208,7 +210,9 @@ static void checkGLError (const char* file, const int line)
 
  #define JUCE_CHECK_OPENGL_ERROR checkGLError (__FILE__, __LINE__);
 #else
- #define JUCE_CHECK_OPENGL_ERROR ;
+ #if ! defined (JUCE_CHECK_OPENGL_ERROR)
+  #define JUCE_CHECK_OPENGL_ERROR ;
+ #endif
 #endif
 
 static void clearGLError() noexcept
